<!-- my sqliالاتصال عن طريق -->
<?php
$host = 'localhost'; // أو عنوان السيرفر إذا كنت تستخدم سيرفر بعيد
$user = 'root'; // اسم المستخدم
$pass = ''; // كلمة المرور (عادةً تكون فارغة في XAMPP)
$db = 'EVA2'; // اسم قاعدة البيانات

// إنشاء اتصال MySQLi
$conn = new mysqli($host, $user, $pass, $db);

// التحقق من الاتصال
if ($conn->connect_error) {
    die("فشل الاتصال: " . $conn->connect_error);
}
echo "تم الاتصال بقاعدة البيانات بنجاح!";
?>



<?php
// افترض أنك قمت بإنشاء اتصال MySQLi كما في السابق

$name = "أحمد";
$email = "ahmed@example.com";

// إعداد استعلام الإدراج
$sql = "INSERT INTO users (name, email) VALUES ('$name', '$email')";

// تنفيذ الاستعلام والتحقق من النجاح
if ($conn->query($sql) === TRUE) {
    echo "تم إدراج البيانات بنجاح!";
} else {
    echo "فشل الإدراج: " . $conn->error;
}

// إغلاق الاتصال
$conn->close();
?>



<!-- الفرق بين SQL iالاتصال عن طريق PDOوبين
▎1. الدعم لعدة قواعد بيانات:

   • PDO: يدعم الاتصال بعدة أنواع من قواعد البيانات مثل MySQL و PostgreSQL و SQLite و Oracle وغيرها. يمكنك تغيير قاعدة البيانات بسهولة دون الحاجة لتغيير الكثير من الكود.

   • MySQLi: مخصص فقط لقاعدة بيانات MySQL.

▎2. واجهة البرمجة:

   • PDO: يوفر واجهة برمجية موحدة، مما يسهل التعامل مع قواعد بيانات متعددة بنفس الطريقة.

   • MySQLi: يقدم واجهتين: واجهة برمجة كائنية (OOP) وواجهة برمجة إجرائية، مما يمنحك مرونة في اختيار الطريقة التي تفضلها.

▎3. دعم المعاملات:

   • PDO: يدعم المعاملات بشكل كامل، مما يسمح لك بتنفيذ عمليات متعددة كعملية واحدة يمكن التراجع عنها في حالة حدوث خطأ.

   • MySQLi: يدعم أيضًا المعاملات، لكن قد يكون استخدامه أقل مرونة مقارنة بـ PDO.

▎4. الأمان:

   • PDO: يدعم التحضير للبيانات (prepared statements) بشكل مدمج، مما يساعد على الحماية من هجمات SQL Injection.

   • MySQLi: يدعم أيضًا التحضير للبيانات، ولكن يجب أن تكون أكثر حرصًا عند استخدام الواجهة الإجرائية.

▎5. سهولة الاستخدام:

   • PDO: يعتبر أكثر سهولة في الاستخدام بالنسبة للمطورين الذين يحتاجون إلى دعم قواعد بيانات متعددة.

   • MySQLi: قد يكون أسهل للمستخدمين الذين يعملون فقط مع MySQL ويرغبون في استخدام الميزات الخاصة بـ MySQL.

▎6. الميزات المتقدمة:

   • PDO: يوفر ميزات متقدمة مثل دعم الـ named parameters، مما يجعل الكود أكثر وضوحًا وسهولة في القراءة.

   • MySQLi: يفتقر إلى بعض الميزات المتقدمة التي يوفرها PDO. -->
